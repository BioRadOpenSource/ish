import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import io

# First dataset (ISH data)
ish_data = """total_query_seqs,total_target_seqs,query_len,matrix,gap_open,gap_extend,8_width,u16_width,runtime_secs,cells_updated,gcups
1,549832,24,Blosum62,3,1,16,8,5.797806036000111,4705875312.0,0.8116648405931443
1,549832,63,Blosum62,3,1,16,8,6.549056223999287,12352922694.0,1.8862141767438498
1,549832,852,Blosum62,3,1,16,8,49.866820834000464,167058573576.0,3.350094727957777
1,549832,246,Blosum62,3,1,16,8,11.632468963000065,48235221948.0,4.146602247676226
1,549832,464,Blosum62,3,1,16,8,29.68520157400053,90980256032.0,3.0648353795139496
1,549832,189,Blosum62,3,1,16,8,10.069853082000918,37058768082.0,3.6801696886958237
1,549832,144,Blosum62,3,1,16,8,8.811415091999152,28235251872.0,3.204394705867151
1,549832,567,Blosum62,3,1,16,8,35.514054625000426,111176304246.0,3.1304875047338716
1,549832,127,Blosum62,3,1,16,8,8.443245296999521,24901923526.0,2.9493308141656627
1,549832,362,Blosum62,3,1,16,8,22.328835742999217,70980285956.0,3.1788619331957118
1,549832,2005,Blosum62,3,1,16,8,103.7594816740002,393136666690.0,3.7889228082806743
1,549832,189,Blosum62,3,1,16,8,10.042274835999706,37058768082.0,3.690276225975328
1,549832,375,Blosum62,3,1,16,8,24.76379285099938,73529301750.0,2.9692261679144445
1,549832,1500,Blosum62,3,1,16,8,82.55126180000116,294117207000.0,3.5628432635295697
1,549832,4548,Blosum62,3,1,16,8,217.803773869,891763371624.0,4.094343067537292
1,549832,3564,Blosum62,3,1,16,8,180.1353169940012,698822483832.0,3.879430727375199
1,549832,497,Blosum62,3,1,16,8,32.248436767000385,97450834586.0,3.0218777824828025
1,549832,222,Blosum62,3,1,16,8,10.831653133000145,43529346636.0,4.018716820185255
1,549832,2504,Blosum62,3,1,16,8,131.2583979079991,490979657552.0,3.740558054777834
1,549832,4061,Blosum62,3,1,16,8,176.64425744300024,796273318418.0,4.507779250479978
1,549832,729,Blosum62,3,1,16,8,44.26237957500052,142940962602.0,3.229400768203012
1,549832,553,Blosum62,3,1,16,8,35.23739414699958,108431210314.0,3.07716313702592
1,549832,1000,Blosum62,3,1,16,8,55.18773073099874,196078138000.0,3.5529298886330842
1,549832,3005,Blosum62,3,1,16,8,150.04999784699976,589214804690.0,3.9267898243544117
1,549832,5147,Blosum62,3,1,16,8,261.385003849,1009214176286.0,3.8610255424944535
1,549832,657,Blosum62,3,1,16,8,40.71141325499957,128823336666.0,3.164305200094714
1,549832,255,Blosum62,3,1,16,8,11.678619190000973,49999925190.0,4.2813216508342915
1,549832,511,Blosum62,3,1,16,8,30.9643655889995,100195928518.0,3.235846322444789
1,549832,4743,Blosum62,3,1,16,8,241.28695281599903,929998608534.0,3.8543261360808003
1,549832,361,Blosum62,3,1,16,8,24.833466035999663,70784207818.0,2.8503555530826086
1,549832,5478,Blosum62,3,1,16,8,275.8810960720002,1074116039964.0,3.893402104229984
1,549832,24,Blosum62,3,1,32,16,7.553748055001051,4705875312.0,0.6229854739309737
1,549832,63,Blosum62,3,1,32,16,7.770763518999956,12352922694.0,1.589666531969015
1,549832,852,Blosum62,3,1,32,16,33.745069410000724,167058573576.0,4.950606903374463
1,549832,246,Blosum62,3,1,32,16,10.316756842999894,48235221948.0,4.675424911340086
1,549832,464,Blosum62,3,1,32,16,21.589353221999772,90980256032.0,4.2141260600289865
1,549832,189,Blosum62,3,1,32,16,9.853562783000598,37058768082.0,3.760951129872935
1,549832,144,Blosum62,3,1,32,16,8.85488699400048,28235251872.0,3.188663151899109
1,549832,567,Blosum62,3,1,32,16,23.870846893998532,111176304246.0,4.657409296774942
1,549832,127,Blosum62,3,1,32,16,7.965388013999473,24901923526.0,3.12626622610649
1,549832,362,Blosum62,3,1,32,16,16.37693239500004,70980285956.0,4.3341624819597255
1,549832,2005,Blosum62,3,1,32,16,59.582589409999855,393136666690.0,6.598180283584975
1,549832,189,Blosum62,3,1,32,16,8.874385864999567,37058768082.0,4.175924807164311
1,549832,375,Blosum62,3,1,32,16,17.61633246800011,73529301750.0,4.173927909430935
1,549832,1500,Blosum62,3,1,32,16,47.96980607200021,294117207000.0,6.131298645621898
1,549832,4548,Blosum62,3,1,32,16,118.72785731799922,891763371624.0,7.51098682119321
1,549832,3564,Blosum62,3,1,32,16,99.066609083,698822483832.0,7.054066857648397
1,549832,497,Blosum62,3,1,32,16,22.0388838150011,97450834586.0,4.421768153234177
1,549832,222,Blosum62,3,1,32,16,9.303261160999682,43529346636.0,4.678934180465655
1,549832,2504,Blosum62,3,1,32,16,73.83525879400077,490979657552.0,6.6496639352457025
1,549832,4061,Blosum62,3,1,32,16,97.3240063939993,796273318418.0,8.181674264358026
1,549832,729,Blosum62,3,1,32,16,27.91860118399927,142940962602.0,5.119918496630212
1,549832,553,Blosum62,3,1,32,16,23.20719452100093,108431210314.0,4.672310141403656
1,549832,1000,Blosum62,3,1,32,16,33.78051677499934,196078138000.0,5.804474197538496
1,549832,3005,Blosum62,3,1,32,16,83.22396710199973,589214804690.0,7.079869239684948
1,549832,5147,Blosum62,3,1,32,16,142.14729555800113,1009214176286.0,7.099777539377841
1,549832,657,Blosum62,3,1,32,16,26.216824823000934,128823336666.0,4.913765779637006
1,549832,255,Blosum62,3,1,32,16,9.765835654001421,49999925190.0,5.1198818986384635
1,549832,511,Blosum62,3,1,32,16,20.822026868001558,100195928518.0,4.812016099737966
1,549832,4743,Blosum62,3,1,32,16,131.87688709699978,929998608534.0,7.052021237428478
1,549832,361,Blosum62,3,1,32,16,17.768818501999704,70784207818.0,3.983619271592759
1,549832,5478,Blosum62,3,1,32,16,142.30636339199918,1074116039964.0,7.547912927865525
1,549832,24,Blosum62,3,1,64,32,9.845984327001133,4705875312.0,0.47794869011672547
1,549832,63,Blosum62,3,1,64,32,10.175354383000013,12352922694.0,1.2140041741089682
1,549832,852,Blosum62,3,1,64,32,29.771624597000482,167058573576.0,5.611335485965764
1,549832,246,Blosum62,3,1,64,32,11.470805887000097,48235221948.0,4.20504212373301
1,549832,464,Blosum62,3,1,64,32,22.56524474700018,90980256032.0,4.031875437295884
1,549832,189,Blosum62,3,1,64,32,10.683901732998493,37058768082.0,3.468654898569463
1,549832,144,Blosum62,3,1,64,32,10.95268630800092,28235251872.0,2.5779293844446354
1,549832,567,Blosum62,3,1,64,32,23.73836689500058,111176304246.0,4.683401547282273
1,549832,127,Blosum62,3,1,64,32,9.799294300000838,24901923526.0,2.5411955967071904
1,549832,362,Blosum62,3,1,64,32,18.523185620999357,70980285956.0,3.831969695079398
1,549832,2005,Blosum62,3,1,64,32,49.47872664799979,393136666690.0,7.945569607860811
1,549832,189,Blosum62,3,1,64,32,10.604545123000207,37058768082.0,3.494611758652731
1,549832,375,Blosum62,3,1,64,32,19.249057156999697,73529301750.0,3.8198910809126003
1,549832,1500,Blosum62,3,1,64,32,41.28385060600158,294117207000.0,7.124267787105188
1,549832,4548,Blosum62,3,1,64,32,89.62916226099878,891763371624.0,9.949477928034163
1,549832,3564,Blosum62,3,1,64,32,76.51238703700074,698822483832.0,9.133455521313895
1,549832,497,Blosum62,3,1,64,32,22.61639099599961,97450834586.0,4.308858765451885
1,549832,222,Blosum62,3,1,64,32,11.813055716000235,43529346636.0,3.6848507009953
1,549832,2504,Blosum62,3,1,64,32,59.675744338001095,490979657552.0,8.227457621158612
1,549832,4061,Blosum62,3,1,64,32,74.03547081100078,796273318418.0,10.755294856579521
1,549832,729,Blosum62,3,1,64,32,27.708561556999484,142940962602.0,5.158729092015661
1,549832,553,Blosum62,3,1,64,32,23.810093832000348,108431210314.0,4.554001806085719
1,549832,1000,Blosum62,3,1,64,32,32.46713770599854,196078138000.0,6.03928007992442
1,549832,3005,Blosum62,3,1,64,32,65.5008312659993,589214804690.0,8.995531710081584
1,549832,5147,Blosum62,3,1,64,32,198.71420700599992,1009214176286.0,5.078721806013236
1,549832,657,Blosum62,3,1,64,32,27.457245024001168,128823336666.0,4.691779402973307
1,549832,255,Blosum62,3,1,64,32,11.44926167199992,49999925190.0,4.367087295443582
1,549832,511,Blosum62,3,1,64,32,21.692516727998736,100195928518.0,4.618916734021746
1,549832,4743,Blosum62,3,1,64,32,101.08324895500118,929998608534.0,9.200323675270901
1,549832,361,Blosum62,3,1,64,32,19.67188696500125,70784207818.0,3.5982418943304206
1,549832,5478,Blosum62,3,1,64,32,105.6040841139984,1074116039964.0,10.171160035860963"""

# Second dataset (Parasail data)
parasail_data = """aligner,total_query_seqs,total_target_seqs,query_len,matrix,gap_open,gap_extend,u8_width,u16_width,score_size,runtime_secs,cells_updated,gcups
parasail_aligner,1,549832,24,blosum62,3,1,16,8,sat,5.8148,4705875312.0,0.8093
parasail_aligner,1,549832,63,blosum62,3,1,16,8,sat,6.4683,12352922694.0,1.9098
parasail_aligner,1,549832,852,blosum62,3,1,16,8,sat,54.0001,167058573576.0,3.0937
parasail_aligner,1,549832,246,blosum62,3,1,16,8,sat,13.3387,48235221948.0,3.6162
parasail_aligner,1,549832,464,blosum62,3,1,16,8,sat,31.4601,90980256032.0,2.8919
parasail_aligner,1,549832,189,blosum62,3,1,16,8,sat,10.3276,37058768082.0,3.5883
parasail_aligner,1,549832,144,blosum62,3,1,16,8,sat,8.7749,28235251872.0,3.2177
parasail_aligner,1,549832,567,blosum62,3,1,16,8,sat,37.9894,111176304246.0,2.9265
parasail_aligner,1,549832,127,blosum62,3,1,16,8,sat,8.4066,24901923526.0,2.9622
parasail_aligner,1,549832,362,blosum62,3,1,16,8,sat,23.782,70980285956.0,2.9846
parasail_aligner,1,549832,2005,blosum62,3,1,16,8,sat,114.3748,393136666690.0,3.4373
parasail_aligner,1,549832,189,blosum62,3,1,16,8,sat,10.2727,37058768082.0,3.6075
parasail_aligner,1,549832,375,blosum62,3,1,16,8,sat,26.0136,73529301750.0,2.8266
parasail_aligner,1,549832,1500,blosum62,3,1,16,8,sat,90.9492,294117207000.0,3.2339
parasail_aligner,1,549832,4548,blosum62,3,1,16,8,sat,243.5598,891763371624.0,3.6614
parasail_aligner,1,549832,3564,blosum62,3,1,16,8,sat,201.3818,698822483832.0,3.4701
parasail_aligner,1,549832,497,blosum62,3,1,16,8,sat,34.3059,97450834586.0,2.8406
parasail_aligner,1,549832,222,blosum62,3,1,16,8,sat,11.2928,43529346636.0,3.8546
parasail_aligner,1,549832,2504,blosum62,3,1,16,8,sat,146.0119,490979657552.0,3.3626
parasail_aligner,1,549832,4061,blosum62,3,1,16,8,sat,197.6052,796273318418.0,4.0296
parasail_aligner,1,549832,729,blosum62,3,1,16,8,sat,47.6809,142940962602.0,2.9979
parasail_aligner,1,549832,553,blosum62,3,1,16,8,sat,37.4812,108431210314.0,2.8929
parasail_aligner,1,549832,1000,blosum62,3,1,16,8,sat,59.9036,196078138000.0,3.2732
parasail_aligner,1,549832,3005,blosum62,3,1,16,8,sat,166.8984,589214804690.0,3.5304
parasail_aligner,1,549832,5147,blosum62,3,1,16,8,sat,291.4227,1009214176286.0,3.4631
parasail_aligner,1,549832,657,blosum62,3,1,16,8,sat,43.9001,128823336666.0,2.9345
parasail_aligner,1,549832,255,blosum62,3,1,16,8,sat,12.47,49999925190.0,4.0096
parasail_aligner,1,549832,511,blosum62,3,1,16,8,sat,32.9127,100195928518.0,3.0443
parasail_aligner,1,549832,4743,blosum62,3,1,16,8,sat,269.845,929998608534.0,3.4464
parasail_aligner,1,549832,361,blosum62,3,1,16,8,sat,26.0832,70784207818.0,2.7138
parasail_aligner,1,549832,5478,blosum62,3,1,16,8,sat,291.8451,1074116039964.0,3.6804
parasail_aligner,1,549832,24,blosum62,3,1,32,16,sat,7.6944,4705875312.0,0.6116
parasail_aligner,1,549832,63,blosum62,3,1,32,16,sat,7.3458,12352922694.0,1.6816
parasail_aligner,1,549832,852,blosum62,3,1,32,16,sat,39.1624,167058573576.0,4.2658
parasail_aligner,1,549832,246,blosum62,3,1,32,16,sat,11.3474,48235221948.0,4.2508
parasail_aligner,1,549832,464,blosum62,3,1,32,16,sat,24.372,90980256032.0,3.733
parasail_aligner,1,549832,189,blosum62,3,1,32,16,sat,9.9265,37058768082.0,3.7333
parasail_aligner,1,549832,144,blosum62,3,1,32,16,sat,9.2185,28235251872.0,3.0629
parasail_aligner,1,549832,567,blosum62,3,1,32,16,sat,28.8055,111176304246.0,3.8596
parasail_aligner,1,549832,127,blosum62,3,1,32,16,sat,8.6082,24901923526.0,2.8928
parasail_aligner,1,549832,362,blosum62,3,1,32,16,sat,19.4775,70980285956.0,3.6442
parasail_aligner,1,549832,2005,blosum62,3,1,32,16,sat,78.6397,393136666690.0,4.9992
parasail_aligner,1,549832,189,blosum62,3,1,32,16,sat,9.8643,37058768082.0,3.7568
parasail_aligner,1,549832,375,blosum62,3,1,32,16,sat,20.9398,73529301750.0,3.5115
parasail_aligner,1,549832,1500,blosum62,3,1,32,16,sat,62.9842,294117207000.0,4.6697
parasail_aligner,1,549832,4548,blosum62,3,1,32,16,sat,162.4504,891763371624.0,5.4894
parasail_aligner,1,549832,3564,blosum62,3,1,32,16,sat,135.0221,698822483832.0,5.1756
parasail_aligner,1,549832,497,blosum62,3,1,32,16,sat,26.2917,97450834586.0,3.7065
parasail_aligner,1,549832,222,blosum62,3,1,32,16,sat,10.5479,43529346636.0,4.1268
parasail_aligner,1,549832,2504,blosum62,3,1,32,16,sat,99.2163,490979657552.0,4.9486
parasail_aligner,1,549832,4061,blosum62,3,1,32,16,sat,133.8475,796273318418.0,5.9491
parasail_aligner,1,549832,729,blosum62,3,1,32,16,sat,34.9686,142940962602.0,4.0877
parasail_aligner,1,549832,553,blosum62,3,1,32,16,sat,28.2872,108431210314.0,3.8332
parasail_aligner,1,549832,1000,blosum62,3,1,32,16,sat,43.1869,196078138000.0,4.5402
parasail_aligner,1,549832,3005,blosum62,3,1,32,16,sat,112.5582,589214804690.0,5.2348
parasail_aligner,1,549832,5147,blosum62,3,1,32,16,sat,193.0886,1009214176286.0,5.2267
parasail_aligner,1,549832,657,blosum62,3,1,32,16,sat,32.5655,128823336666.0,3.9558
parasail_aligner,1,549832,255,blosum62,3,1,32,16,sat,11.458,49999925190.0,4.3637
parasail_aligner,1,549832,511,blosum62,3,1,32,16,sat,25.2986,100195928518.0,3.9605
parasail_aligner,1,549832,4743,blosum62,3,1,32,16,sat,179.4025,929998608534.0,5.1839
parasail_aligner,1,549832,361,blosum62,3,1,32,16,sat,20.9446,70784207818.0,3.3796
parasail_aligner,1,549832,5478,blosum62,3,1,32,16,sat,193.8442,1074116039964.0,5.5411"""

# Parse the datasets
df_ish = pd.read_csv(io.StringIO(ish_data))
df_parasail = pd.read_csv(io.StringIO(parasail_data))

# Add aligner information to ish data
df_ish["aligner"] = "ish"

# Prepare the data for plotting
df_ish["width_config"] = (
    df_ish["8_width"].astype(str) + "/" + df_ish["u16_width"].astype(str)
)
df_parasail["width_config"] = (
    df_parasail["u8_width"].astype(str) + "/" + df_parasail["u16_width"].astype(str)
)

# Create a figure with a larger size
plt.figure(figsize=(14, 9))

# Define line styles and colors
ish_colors = {"16/8": "blue", "32/16": "green", "64/32": "red"}

parasail_colors = {"16/8": "lightblue", "32/16": "lightgreen"}

# Plot ISH data
for width_config, color in ish_colors.items():
    subset = df_ish[df_ish["width_config"] == width_config]
    subset = subset.sort_values("query_len")
    plt.plot(
        subset["query_len"],
        subset["gcups"],
        marker="o",
        linestyle="-",
        color=color,
        label=f"ish {width_config}",
    )

# Plot Parasail data
for width_config, color in parasail_colors.items():
    subset = df_parasail[df_parasail["width_config"] == width_config]
    subset = subset.sort_values("query_len")
    plt.plot(
        subset["query_len"],
        subset["gcups"],
        marker="s",  # Square markers for parasail
        linestyle="--",
        color=color,
        label=f"parasail {width_config}",
    )

# Set x-axis ticks every 100
max_query_len = max(df_ish["query_len"].max(), df_parasail["query_len"].max())
x_ticks = np.arange(0, max_query_len + 100, 100)
plt.xticks(x_ticks, rotation=45, ha="right")

# Set labels and title
plt.xlabel("Query Length", fontsize=14)
plt.ylabel("GCUPS (Giga Cell Updates Per Second)", fontsize=14)
plt.title("GCUPS vs Query Length - ISH vs Parasail Comparison", fontsize=16)

# Add grid
plt.grid(True, linestyle="--", alpha=0.7)

# Add legend
plt.legend(title="Aligner and Width Configuration", fontsize=12)

# Adjust layout for better visualization
plt.tight_layout()

# Save the full range figure
plt.savefig("combined_gcups_plot.png", dpi=300)
plt.close()

# Create a zoomed-in version (0-300 query length)
plt.figure(figsize=(14, 9))

# Plot ISH data (zoomed)
for width_config, color in ish_colors.items():
    subset = df_ish[df_ish["width_config"] == width_config]
    subset = subset[subset["query_len"] <= 300]  # Filter for zoom
    subset = subset.sort_values("query_len")
    plt.plot(
        subset["query_len"],
        subset["gcups"],
        marker="o",
        linestyle="-",
        color=color,
        label=f"ish {width_config}",
    )

# Plot Parasail data (zoomed)
for width_config, color in parasail_colors.items():
    subset = df_parasail[df_parasail["width_config"] == width_config]
    subset = subset[subset["query_len"] <= 300]  # Filter for zoom
    subset = subset.sort_values("query_len")
    plt.plot(
        subset["query_len"],
        subset["gcups"],
        marker="s",
        linestyle="--",
        color=color,
        label=f"parasail {width_config}",
    )

# Set x-axis ticks for zoomed plot
x_ticks_zoomed = np.arange(0, 301, 20)  # More granular x-ticks for zoomed view
plt.xticks(x_ticks_zoomed)

# Set y-axis limits to better show the data in this range
plt.ylim(bottom=0)  # Start from 0 for clearer comparison

# Set labels and title for zoomed plot
plt.xlabel("Query Length", fontsize=14)
plt.ylabel("GCUPS (Giga Cell Updates Per Second)", fontsize=14)
plt.title(
    "GCUPS vs Query Length (Zoomed 0-300) - ISH vs Parasail Comparison", fontsize=16
)

# Add grid
plt.grid(True, linestyle="--", alpha=0.7)

# Add legend
plt.legend(title="Aligner and Width Configuration", fontsize=12)

# Adjust layout
plt.tight_layout()

# Save the zoomed figure
plt.savefig("combined_gcups_plot_zoomed.png", dpi=300)

print("Both full-range and zoomed (0-300) plots created successfully!")
